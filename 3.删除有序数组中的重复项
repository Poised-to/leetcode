给你一个 升序排列 的数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新长度。元素的 相对顺序 应该保持 一致 。

由于在某些语言中不能改变数组的长度，所以必须将结果放在数组nums的第一部分。更规范地说，如果在删除重复项之后有 k 个元素，那么 nums 的前 k 个元素应该保存最终结果。

将最终结果插入 nums 的前 k 个位置后返回 k 。

不要使用额外的空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。

class Solution {
    public int removeDuplicates(int[] nums) {
        
        int left=0;
        int right=1;

        //一切的前提都要在right没有走到数组的最后一个元素
        // if(right<nums.length){  //这里需要就行循环，而不是判断
        while(right<nums.length){
            //当left与right所在索引处的数据不相等时
           
            if(nums[left] != nums[right]){
                nums[left+1]=nums[right];  //把left所在索引后一个数据的值改为right索引处所在的值
                left++;  //left指针后移一位
            }
            //如果两个指针所在处的数据一样，那么right指针后移
            right++;
        }
         return left+1;
    //    System.out.print(left+1);
    }
   
