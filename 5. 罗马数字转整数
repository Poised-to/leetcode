罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。

字符          数值
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
例如， 罗马数字 2 写做 II ，即为两个并列的 1 。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。

通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：

I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。
X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 
C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。
给定一个罗马数字，将其转换成整数。

class Solution {
    public int romanToInt(String s) {
        //定义一个变量sum，用于返回最后的数值
        int sum=0;
        //通过getValue方法，获得s字符串0位置上的数字
        int prenum = getValue(s.charAt(0));    //charAt():用于返回指定索引处的字符，索引的范围是0~length()-1
        //从第二个位置遍历s字符串
       for(int i=1; i<s.length();i++){
           //把遍历出的每一个值，都赋给num
           int num = getValue(s.charAt(i));
           //进行判断prenum与num的值谁的大
           if(num>prenum){
               sum = sum-prenum;
           }else{
               sum = sum+prenum;
           }
           //把num的值赋给prenum
           prenum=num;

        }
            //sum+=prenum
            sum = prenum+sum;  
            return sum;
       }

       private int getValue(char ch){
           switch(ch){
                case 'I': return 1;

                case 'V': return 5;

                case 'X': return 10;

                case 'L': return 50;

                case 'C': return 100;

                case 'D': return 500;

                case 'M': return 1000;

                default: return 0;
           }
       }
    
}
