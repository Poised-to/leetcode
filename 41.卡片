题目描述
本题为填空题，只需要算出结果后，在代码中使用输出语句将所填结果输出即可。

小蓝有很多数字卡片，每张卡片上都是数字 00 到 99。

小蓝准备用这些卡片来拼一些数，他想从 11 开始拼出正整数，每拼一个，就保存起来，卡片就不能用来拼其它数了。

小蓝想知道自己能从 11 拼到多少。

例如，当小蓝有 3030 张卡片，其中 00 到 99 各 33 张，则小蓝可以拼出 11 到 1010，

但是拼 1111 时卡片 11 已经只有一张了，不够拼出 1111。

现在小蓝手里有 00 到 99 的卡片各 20212021 张，共 2021020210 张，请问小蓝可以从 11 拼到多少？

提示：建议使用计算机编程解决问题。

import java.util.Scanner;
// 1:无需package
// 2: 类名必须Main, 不可修改

public class Main {
    public static void main(String[] args) {
        //初始化一个数组，大小为10
        int[] arr = new int[10];
        //将0~9索引处的数组值都改为2021，用数字大小代表卡片个数
        for(int i=0; i<arr.length; i++){
            arr[i]=2021;
        }
        //定义一个最后返回的结果
        int result = 0;
        for(result=1; result<99999; result++){
            //将得到的result转换为字符串类型，方便一会操作
            String str = String.valueOf(result);
            //将str用split()，方法拆成单个字符串,得到一个字符串类型的数组
            String[] newStr = str.split("");
            //采用增强for循环，将newStr字符串数组进行遍历
            for(String ss : newStr){
              //将ss在转换回数字，方便大小比较
              int w = Integer.parseInt(ss);
              if(arr[w]>0){
                arr[w]-=1;
              }else{
                //程序执行到这里的时候，result已经+1，但是这一遍并没有走完，所以要-1
                System.out.println(result-1);
                return;
              }
            }
        }
    }
}
