给你一个二叉树的根节点 root ，按 任意顺序 ，返回所有从根节点到叶子节点的路径。

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        //这一题有一些思路，但是递归相关的领悟不够
        List<String> str = new ArrayList<>();
        //调用dfs方法解决问题
        dfs(root,"",str);
        //当上面dfs方法执行结束之后，才会弹栈，执行下面方法
        return str;
        }
    
    //定义一个方法，用来得到一条路线
    //需要传递三个参数root,path,str
    private void dfs(TreeNode root,String path,List<String> str){
        if(root == null){
            return;
        }
        //如果当前结点为叶子结点，就把这条路径添加到str
        if(root.left == null && root.right == null){
            str.add(path+root.val);
        }
        //如果当前结点不是叶子结点，分别递归左右结点
        dfs(root.left,path+root.val+"->",str);
        dfs(root.right,path+root.val+"->",str);
    }
    
}
