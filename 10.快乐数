编写一个算法来判断一个数 n 是不是快乐数。

「快乐数」 定义为：

对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。
然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不到 1。
如果这个过程 结果为 1，那么这个数就是快乐数。
如果 n 是 快乐数 就返回 true ；不是，则返回 false 。

class Solution {
    public boolean isHappy(int n) {
        //使用HashSet来存储，这个集合中元素不允许重复
        Set<Integer> set = new HashSet();
        while(n != 1 && !set.contains(n)){ //&&短路运算符，同and
            set.add(n);
            //把平方运算过的值，重新赋给n,并在下一次循环时添加到set集合中
            n=getSum(n);
        }
        //当集合中存n时，判断n是否等于1
        return n==1;
    }

    //定义一个方法，用来把每一位数字进行平方运算
    private int getSum(int n){
        int sum = 0;
        while(n > 0){
            //取道个位上的数字
            int d = n%10;
            //这一步的目的是把n十位上的数字挪到ge'e
            n = n/10;
            sum+=d*d;
        }
        return sum;
    }
}
