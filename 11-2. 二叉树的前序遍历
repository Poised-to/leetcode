/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

 
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        pre(root, res);
        return res;
    }

    //定义一个方法进行前序遍历
    public void pre(TreeNode root, List<Integer> res){
        //判断这个树是否为空
        if(root == null){
            // return 0;  //不用返回0，直接返回,让方法调用者打印自己的数据(res)
            return;  
        }
        //进行递归, 前序遍历
        res.add(root.val);
        pre(root.left,res);
        pre(root.right,res);
    }
}
